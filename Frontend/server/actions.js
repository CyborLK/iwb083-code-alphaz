

/* 
// User should authorized by the server with the token before accessing further server actions:nivindulakshitha

if (serverAuth.serverAthorization.accepted) {
	fetch(`${serviceServerUrl}/auth/signup`, {
		method: "POST",
		headers: {
			"Content-Type": "application/json",
			"keep-alive-token": serverAuth.serverAthorization.aliveToken // server generated keep-alive-token should be provided with every request:nivindulakshitha
		},
		body: JSON.stringify({ // Credentials for signup request:nivindulakshitha
			fullname: "Admin",
			email: "admin@localhost",
			password: "admin",
		})
	}).then(response => {
		if (response.status === 202) {
			console.log("Signup successful.");
		} else {
			console.log("Signup failed because,", response.statusText); // Fail reason can be accessed from response, can be used to present to user:nivindulakshitha
		}
	}).catch(error => {
		console.log(error);
	});
}

// After server authorization user can request other actions with retrieved token which is generated by the server:nivindulakshitha
if (serverAuth.serverAthorization.accepted) {
	fetch(`${serviceServerUrl}/auth/login`, {
		method: "POST",
		headers: {
			"Content-Type": "application/json",
			"keep-alive-token": serverAuth.serverAthorization.aliveToken // server generated keep-alive-token should be provided with every request:nivindulakshitha
		},
		body: JSON.stringify({ // Credentials for login request:nivindulakshitha
			email: "admin@localhost",
			password: "admin",
		})
	}).then(response => {
		if (response.status === 202) {
			console.log("Login successful.");
		} else {
			console.log("Login failed because,", response.statusText); // Fail reason can be accessed from response, can be used to present to user:nivindulakshitha
		}
	}).catch(error => {
		console.log(error);
	});
} */